{
  "uid" : "6ec95aa321eb56ab",
  "name" : "test_add_member_fail[user2-11528872802-手机已存在于通讯录，无法添加]",
  "fullName" : "testcases.test_addMember.TestAddMember#test_add_member_fail",
  "historyId" : "f072b275c56a30d0c23d296fd0a67095",
  "time" : {
    "start" : 1626595935708,
    "stop" : 1626595958049,
    "duration" : 22341
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
  "statusTrace" : "self = <testcases.test_addMember.TestAddMember object at 0x0000020CA1A9F048>\nuser = 'user2', phone = '11528872802', expect = '手机已存在于通讯录，无法添加'\n\n    @pytest.mark.parametrize(\"user,phone,expect\", test_data['test_add_member_fail'])\n    def test_add_member_fail(self, user, phone, expect):\n>       fail_text = self.addMember.add_member_fail(user, phone)\n\ntestcases\\test_addMember.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npage\\addMember_page.py:29: in add_member_fail\n    self.steps(os.getcwd() + \"/pageYaml/addMember_page.yaml\")\npage\\base_page.py:71: in steps\n    self.wait_for_element(step['by'], step['locator'])\npage\\base_page.py:47: in wait_for_element\n    WebDriverWait(self._driver, timeout).until(expected_conditions.element_to_be_clickable((locator, value)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"640a1c3f-2de5-44e5-ba09-8b1b68601761\")>\nmethod = <selenium.webdriver.support.expected_conditions.element_to_be_clickable object at 0x0000020CA1B0FEF0>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nC:\\pyenv\\webUI_test\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
    "statusTrace" : "self = <testcases.test_addMember.TestAddMember object at 0x0000020CA1A9F048>\nuser = 'user2', phone = '11528872802', expect = '手机已存在于通讯录，无法添加'\n\n    @pytest.mark.parametrize(\"user,phone,expect\", test_data['test_add_member_fail'])\n    def test_add_member_fail(self, user, phone, expect):\n>       fail_text = self.addMember.add_member_fail(user, phone)\n\ntestcases\\test_addMember.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npage\\addMember_page.py:29: in add_member_fail\n    self.steps(os.getcwd() + \"/pageYaml/addMember_page.yaml\")\npage\\base_page.py:71: in steps\n    self.wait_for_element(step['by'], step['locator'])\npage\\base_page.py:47: in wait_for_element\n    WebDriverWait(self._driver, timeout).until(expected_conditions.element_to_be_clickable((locator, value)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"640a1c3f-2de5-44e5-ba09-8b1b68601761\")>\nmethod = <selenium.webdriver.support.expected_conditions.element_to_be_clickable object at 0x0000020CA1B0FEF0>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nC:\\pyenv\\webUI_test\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "712e82cc1b299b6f",
      "name" : "log",
      "source" : "712e82cc1b299b6f.txt",
      "type" : "text/plain",
      "size" : 689
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 1
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "testcases"
  }, {
    "name" : "suite",
    "value" : "test_addMember"
  }, {
    "name" : "subSuite",
    "value" : "TestAddMember"
  }, {
    "name" : "host",
    "value" : "z"
  }, {
    "name" : "thread",
    "value" : "19760-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testcases.test_addMember"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "expect",
    "value" : "'手机已存在于通讯录，无法添加'"
  }, {
    "name" : "phone",
    "value" : "'11528872802'"
  }, {
    "name" : "user",
    "value" : "'user2'"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "6ec95aa321eb56ab.json",
  "parameterValues" : [ "'手机已存在于通讯录，无法添加'", "'11528872802'", "'user2'" ]
}